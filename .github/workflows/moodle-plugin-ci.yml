name: Moodle Plugin CI

on: [push, pull_request]

jobs:
  test:
    runs-on: ubuntu-22.04

    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: 'postgres'
          POSTGRES_HOST_AUTH_METHOD: 'trust'
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 3

      mariadb:
        image: mariadb:10
        env:
          MYSQL_USER: 'root'
          MYSQL_ALLOW_EMPTY_PASSWORD: "true"
          MYSQL_CHARACTER_SET_SERVER: "utf8mb4"
          MYSQL_COLLATION_SERVER: "utf8mb4_unicode_ci"
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval 10s --health-timeout 5s --health-retries 3

    strategy:
      fail-fast: false
      matrix:
        php: ['8.1', '8.2']
        moodle-branch: ['MOODLE_402_STABLE', 'MOODLE_403_STABLE']
        database: [pgsql, mariadb]

    steps:
      - name: Check out repository code
        uses: actions/checkout@v3
        with:
          path: plugins

      - name: Setup PHP ${{ matrix.php }}
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: ${{ matrix.extensions }}
          ini-values: max_input_vars=5000
          coverage: none

      - name: Initialise moodle-plugin-ci
        run: |
          composer create-project -n --no-dev --prefer-dist moodlehq/moodle-plugin-ci ci ^4
          echo $(cd ci/bin; pwd) >> $GITHUB_PATH
          echo $(cd ci/vendor/bin; pwd) >> $GITHUB_PATH
          # sudo locale-gen en_AU.UTF-8
          echo "NVM_DIR=$HOME/.nvm" >> $GITHUB_ENV

      - name: Install moodle-plugin-ci
        run: |
          moodle-plugin-ci install --plugin ./plugins/local_moodle_rest_plugin --db-host=127.0.0.1
        env:
          DB: ${{ matrix.database }}
          MOODLE_BRANCH: ${{ matrix.moodle-branch }}

      - name: PHP Lint
        if: ${{ always() }}
        run: moodle-plugin-ci phplint --plugin ./plugins/local_moodle_rest_plugin

      - name: PHP Copy/Paste Detector
        continue-on-error: true # This step will show errors but will not fail
        if: ${{ always() }}
        run: moodle-plugin-ci phpcpd --plugin ./plugins/local_moodle_rest_plugin

      - name: PHP Mess Detector
        continue-on-error: true # This step will show errors but will not fail
        if: ${{ always() }}
        run: moodle-plugin-ci phpmd --plugin ./plugins/local_moodle_rest_plugin

      - name: Moodle Code Checker
        if: ${{ always() }}
        run: moodle-plugin-ci phpcs --plugin ./plugins/local_moodle_rest_plugin --max-warnings 0

      - name: Moodle PHPDoc Checker
        if: ${{ always() }}
        run: moodle-plugin-ci phpdoc --plugin ./plugins/local_moodle_rest_plugin --max-warnings 0

      - name: Validating
        if: ${{ always() }}
        run: moodle-plugin-ci validate --plugin ./plugins/local_moodle_rest_plugin

      - name: Check upgrade savepoints
        if: ${{ always() }}
        run: moodle-plugin-ci savepoints --plugin ./plugins/local_moodle_rest_plugin

      - name: Mustache Lint
        if: ${{ always() }}
        run: moodle-plugin-ci mustache --plugin ./plugins/local_moodle_rest_plugin

      - name: Grunt
        if: ${{ always() }}
        run: moodle-plugin-ci grunt --plugin ./plugins/local_moodle_rest_plugin --max-lint-warnings 0

      - name: PHPUnit tests
        if: ${{ always() }}
        run: moodle-plugin-ci phpunit --plugin ./plugins/local_moodle_rest_plugin --fail-on-warning

      - name: Behat features
        if: ${{ always() }}
        run: moodle-plugin-ci behat --plugin ./plugins/local_moodle_rest_plugin --profile chrome
